{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","pages/article-content.js","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","Fragment","AboutPage","ArticlesList","_ref","articles","map","article","key","react_router_dom","className","to","concat","name","title","content","substring","ArticlesListPage","components_ArticlesList","articleContent","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","result","body","wrap","_context","prev","next","fetch","method","sent","json","stop","apply","this","arguments","id","onClick","AddCommentForm","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","commentText","setCommentText","addComment","JSON","stringify","headers","Content-Type","type","value","onChange","event","target","rows","cols","NotFoundPage","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","pages_NotFoundPage","otherArticles","filter","components_UpvotesSection","paragraph","components_CommentsList","components_AddCommentForm","NavBar","App","src_NavBar","react_router","path","component","exact","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f2525d2.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n    <>\n    <h1>Hello, welcome to my blog!</h1>\n    <p>\n        This blog will be dedicated to Node.js and React.js topics\n    </p>\n    </>\n);\n\nexport default HomePage;","import React from 'react';\n\nconst AboutPage = () => (\n    <>\n    <h1>About me</h1>\n    <p>\n        Welcome to my personal blog! My name is Manar Mansour. \n        I am a Full-stack web developer with an M.Sc degree and \n        more than 5 years of multidisciplinary experience. \n        I developed and implemented novel algorithms and programs\n        that were adopted by US companies in the silicon valley \n        and a technology spin-off start-up in the AUC.\n        I am the first author of 6 publications and I also hold\n        a US patent. I have a passion for developing new technologies\n        or solutions that enhance people's lives.\n    </p>\n    <p>\n        In my free time, I love to read and write about philosophical\n        and theological subjects, working out and visiting historical and natural places. \n    </p>\n    </>\n);\n\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticlesList = ({ articles }) => (\n    <>\n    {articles.map((article, key) => (\n        <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\n            <h3>{article.title}</h3>\n            <p>{article.content[0].substring(0, 150)}...</p>\n        </Link>\n    ))}\n    </>\n);\n\nexport default ArticlesList;","const articles = [\n    {\n        name: 'learn-node',\n        title: 'Overview of Node.js',\n        content: [\n            `Node.js is an exciting new platform for developing \n            web applications, application servers, any sort of \n            network server or client, and general-purpose programming. It is designed for extreme\n             scalability in networked applications through an ingenious combination of server-side \n             JavaScript, asynchronous I/O, and asynchronous\n            programming.`,`While only ten years old, Node.js has quickly grown in prominence and is now\n            playing a significant role. Companies, both large and small, are using it for large-scale\n            and small-scale projects. PayPal, for example, has converted many services from Java\n            to Node.js.`,\n            `The Node.js architecture departs from a typical choice made by other application\n            platforms. Where threads are widely used to scale an application to fill the CPU,\n            Node.js eschews threads because of their inherent complexity. It's claimed that with\n            single-thread event-driven architectures, the memory footprint is low, throughput is\n            high, the latency profile under load is better, and the programming model is simpler.\n            The Node.js platform is in a phase of rapid growth, and many see it as a compelling\n            alternative to the traditional web application architectures using Java, PHP, Python,\n            or Ruby on Rails.`,\n            `At its heart, it is a standalone JavaScript engine with extensions that is suitable for\n            general-purpose programming and that has a clear focus on application server\n            development. Even though we're comparing Node.js to application-server platforms,\n            it is not an application server. Instead, Node.js is a programming runtime akin to\n            Python, Go, or Java SE. While there are web application frameworks and application\n            servers written in Node.js, it is simply a system to execute JavaScript programs.`,\n            `The key architectural choice is that Node.js is event-driven, rather than\n            multithreaded. The Node.js architecture rests on dispatching blocking operations to a\n            single-threaded event loop, with results arriving back to the caller as an event that\n            invokes an event handler function. In most cases, the event is converted into a\n            promise that is handled by an async function. Because Node.js is based on Chrome's\n            V8 JavaScript engine, the performance and feature improvements implemented in\n            Chrome quickly flow through to the Node.js platform.`,\n            `This article is from the book \"Node.js web development\" by David Herron`\n            \n        ]\n    },    {\n        name: 'node-capabilities',\n        title: 'The capabilities of Node.js',\n        content: [\n            `Node.js is a platform for writing JavaScript applications outside web browsers. This is\n            not the JavaScript environment we are familiar with in web browsers! While Node.js\n            executes the same JavaScript language that we use in browsers, it doesn't have some\n            of the features associated with the browser. For example, there is no HTML DOM\n            built into Node.js.\n            Beyond its native ability to execute JavaScript, the built-in modules provide\n            capabilities like: command-line tools (in shell script style).. an interactive-terminal style of program—that is, a read-eval-print loop\n            (REPL).. excellent process control functions to oversee child processes.. a buffer object to deal with binary data\n            .. TCP or UDP sockets with comprehensive, event-driven callbacks\n            .. DNS lookup .. An HTTP, HTTPS, and HTTP/2-client server layered on top of the TCP\n            library filesystem access ..built-in rudimentary unit testing support through assertions .. etc.\n            `,\n            `The network layer of Node.js is low level while being simple to use—for example, the\n            HTTP modules allow you to write an HTTP server (or client) using a few lines of\n            code. This is powerful, but it puts you, the programmer, very close to the protocol\n            requests and makes you implement precisely those HTTP headers that you should\n            return in request responses.`,\n            `Typical web-application developers don't need to work at a low level of the HTTP or\n            other protocols; instead, we tend to be more productive working with higher-level\n            interfaces—for example, PHP coders assume that Apache/Nginx/and so on are\n            already there providing the HTTP, and that they don't have to implement the HTTP\n            server portion of the stack. By contrast, a Node.js programmer does implement an\n            HTTP server, to which their application code is attached.`,\n            `To simplify the situation, the Node.js community has several web application\n            frameworks, such as Express, providing the higher-level interfaces required by\n            typical programmers. You can quickly configure an HTTP server with baked-in\n            capabilities, such as sessions, cookies, serving static files, and logging, letting\n            developers focus on their business logic. Other frameworks provide OAuth 2 support\n            or focus on REST APIs, and so on.\n            The community of folks using Node.js has built an amazing variety of things on this\n            foundation.`,\n            `This article is from the book \"Node.js web development\" by David Herron`\n            \n        ]\n    },     {\n        name: 'learn-react',\n        title: 'What makes React a good library?',\n        content: [\n            `What makes a JavaScript library good? Is it the number of stars on\n            GitHub? The number of downloads on npm? Is the number of tweets\n            that ThoughtLeaders™ write about it on a daily basis important? How\n            do we pick the best tool to use to build the best thing? How do we\n            know it’s worth our time? How do we know it’s good?`,\n            `When React was first released, there was a lot of conversation around\n            whether it was good, and there were many skeptics. It was new, and the\n            new can often be upsetting.`,\n            `To respond to these critiques, Pete Hunt from the React team wrote an\n            article called “Why React?” that recommended that you “give it\n            [React] five minutes.” He wanted to encourage people to work with\n            React first before thinking that the team’s approach was too wild.`,\n            `Yes, React is a small library that doesn’t come with everything you\n            might need out of the box to build your application. Give it five\n            minutes.`,\n            `Yes, in React, you write code that looks like HTML right in your\n            JavaScript code. And yes, those tags require preprocessing to run in a\n            browser. And you’ll probably need a build tool like webpack for that.\n            Give it five minutes.`,\n            `As React approaches a decade of use, a lot of teams decided that it’s good because they gave it five minutes. We’re talking Uber, Twitter,\n            Airbnb, and Twitter—huge companies that tried React and realized that\n            it could help teams build better products faster. At the end of the day,\n            isn’t that what we’re all here for? Not for the tweets. Not for the stars.\n            Not for the downloads. We’re here to build cool stuff with tools that\n            we like to use. We’re here for the glory of shipping stuff that we’re\n            proud to say we built. If you like doing those types of things, you’ll\n            probably like working with React.`,\n            `This article is from the O'Reilly book \"Learning React\" Alex Banks and Eve Porcello`\n        ]\n    },     {\n        name: 'node-for-microservices',\n        title: 'Node.js for Microservice architecture',\n        content: [\n            `A new sensation in software development is the idea of the microservice.\n            Microservices are focused on splitting a large web application into small, tightlyfocused\n            services that can be easily developed by small teams. While they aren't\n            exactly a new idea—they're more of a reframing of old client–server computing\n            models—the microservice pattern fits well with agile project-management techniques,\n            and gives us a more granular application deployment.`,\n            `Node.js is an excellent platform for implementing microservices. We'll get into this\n            later.`,\n            `This article is from the book \"Node.js web development\" by David Herron`\n        ]\n    }\n];\n\nexport default articles;","import React from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\n\nconst ArticlesListPage = () => (\n    <>\n    <h1>Articles</h1>\n    <ArticlesList articles={articleContent} />\n    </>\n);\n\nexport default ArticlesListPage;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div id=\"upvotes-section\">\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\n            <p>This post has been upvoted {upvotes} times</p>\n        </div>\n    );\n}\n\nexport default UpvotesSection;","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({ username, text: commentText }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add a Comment</h3>\n            <label>\n                Name:\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </label>\n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n            </label>\n            <button onClick={() => addComment()}>Add Comment</button>\n        </div>\n    );\n}\n\nexport default AddCommentForm;","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);\n\nexport default NotFoundPage;","import React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport NotFoundPage from './NotFoundPage';\nimport articleContent from './article-content';\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`);\n            const body = await result.json();\n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return (\n        <>\n        <h1>{article.title}</h1>\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n        {article.content.map((paragraph, key) => (\n            <p key={key}>{paragraph}</p>\n        ))}\n        <CommentsList comments={articleInfo.comments} />\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n        <h3>Other Articles:</h3>\n        <ArticlesList articles={otherArticles} />\n        </>\n    );\n}\n\nexport default ArticlePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/articles-list\">Articles</Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default NavBar;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport NavBar from './NavBar';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/articles-list\" component={ArticlesListPage} />\n              <Route path=\"/article/:name\" component={ArticlePage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}